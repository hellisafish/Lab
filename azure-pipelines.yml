# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:

- task: CmdLine@2
  displayName: Clean Artifacts Directory
  inputs:
    script: |
      DEL /F/Q/S *.*
    workingDirectory: '$(Build.ArtifactStagingDirectory)'

- task: NuGetToolInstaller@1

- task: DotNetCoreCLI@2
  displayName: Build Project
  inputs:
    command: 'build'
    projects: '**/*.sln'

- task: DotNetCoreCLI@2
  displayName: Publish Project
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: '**/ConsoleApp1.csproj'
    arguments: '-r linux-arm'
    zipAfterPublish: false

- task: CmdLine@2
  displayName: Clone Deploy Repository
  inputs:
    script: |
      git clone "https://$(LabDeployGitUsername):$(LabDeployGitPassword)@dev.azure.com/NetCorePi/Lab/_git/LabDeploy" "Deploy"
      cd Deploy
      git config user.email "michael.payne@gilmond.com"
      git config user.name "Michael Payne"
      git branch --set-upstream-to origin/master
      git pull
    workingDirectory: '$(Build.ArtifactStagingDirectory)'

- task: CopyFiles@2
  displayName: 'Copy Artifacts to Deploy Repository'
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)/ConsoleApp1/bin/Debug/netcoreapp2.1/linux-arm/publish/'
    Contents: |
     *
     !.git/**/*
    TargetFolder: '$(Build.ArtifactStagingDirectory)/Deploy'
    overWrite: true

- task: CmdLine@2
  displayName: Push Deploy Repository
  inputs:
    script: |
      cd Deploy
      dir
      git status
      git add .
      git status
      git commit -m "Latest Deploy $(Build.BuildId)" -a
      git status
      git push
      git status
    workingDirectory: '$(Build.ArtifactStagingDirectory)'